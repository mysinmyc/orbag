openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/search/v1/citype/{ciType}:
    get:
      tags:
        - search-controller
      operationId: getSearchTempateFor
      parameters:
        - name: ciType
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetSearchTemplateResponse'
    post:
      tags:
        - search-controller
      operationId: executeSearch
      parameters:
        - name: ciType
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchResult'
  /api/playground/ci/set:
    post:
      tags:
        - play-ground
      operationId: setCi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerializableCI'
        required: true
      responses:
        '200':
          description: OK
  /api/edit/v1/{ciType}/{ciId}:
    get:
      tags:
        - edit-controller
      operationId: getById
      parameters:
        - name: ciType
          in: path
          required: true
          schema:
            type: string
        - name: ciId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SerializableCI'
    post:
      tags:
        - edit-controller
      operationId: updateCi
      parameters:
        - name: ciType
          in: path
          required: true
          schema:
            type: string
        - name: ciId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerializableCI'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SerializableCI'
  /api/authentication/v1/createToken:
    post:
      tags:
        - authentication-rest-controller
      operationId: createToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/action/v1/invoke:
    post:
      tags:
        - action-controller
      operationId: invoke
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserActionInvokeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserActionInvokeResponse'
  /api/action/v1/getAvailable:
    post:
      tags:
        - action-controller
      operationId: getAvailableActionsFor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailableActionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AvailableActionsResponse'
  /api/security/v1/whoami:
    get:
      tags:
        - security-controller
      operationId: whoAmI
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WhoAmIResponse'
  /api/schema/v1:
    get:
      tags:
        - schema-controller
      operationId: getSchema
      parameters:
        - name: includeProperties
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetSchemaResponse'
  /api/schema/v1/citype/{ciType}:
    get:
      tags:
        - schema-controller
      operationId: getCIType
      parameters:
        - name: ciType
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetCITypeResponse'
  /api/playground/ci/get:
    get:
      tags:
        - play-ground
      operationId: getCi
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SerializableCI'
  /api/bookmarks/v1:
    get:
      tags:
        - book-marks-controller
      operationId: getAll
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebSiteLink'
components:
  schemas:
    BooleanProperty:
      type: object
      properties:
        name:
          type: string
        hidden:
          type: boolean
        readonly:
          type: boolean
        category:
          type: string
        label:
          type: string
        value:
          type: boolean
        defaultValue:
          type: boolean
        itemsLabels:
          type: array
          items:
            type: string
        items:
          type: array
          items:
            type: boolean
        rawValue:
          type: boolean
        empty:
          type: boolean
    DateTimeProperty:
      type: object
      properties:
        name:
          type: string
        hidden:
          type: boolean
        readonly:
          type: boolean
        category:
          type: string
        label:
          type: string
        value:
          type: string
          format: date-time
        defaultValue:
          type: string
          format: date-time
        itemsLabels:
          type: array
          items:
            type: string
        items:
          type: array
          items:
            type: string
            format: date-time
        rawValue:
          type: string
          format: date-time
        empty:
          type: boolean
    IntegerProperty:
      type: object
      properties:
        name:
          type: string
        hidden:
          type: boolean
        readonly:
          type: boolean
        category:
          type: string
        label:
          type: string
        value:
          type: integer
          format: int32
        defaultValue:
          type: integer
          format: int32
        itemsLabels:
          type: array
          items:
            type: string
        items:
          type: array
          items:
            type: integer
            format: int32
        rawValue:
          type: integer
          format: int32
        empty:
          type: boolean
    SearchFilters:
      type: object
      properties:
        strings:
          type: array
          items:
            $ref: '#/components/schemas/StringProperty'
        dateTimes:
          type: array
          items:
            $ref: '#/components/schemas/DateTimeProperty'
        integers:
          type: array
          items:
            $ref: '#/components/schemas/IntegerProperty'
        booleans:
          type: array
          items:
            $ref: '#/components/schemas/BooleanProperty'
    SearchRequest:
      type: object
      properties:
        ciType:
          type: string
        filters:
          $ref: '#/components/schemas/SearchFilters'
        limit:
          type: integer
          format: int32
    StringProperty:
      type: object
      properties:
        name:
          type: string
        hidden:
          type: boolean
        readonly:
          type: boolean
        category:
          type: string
        label:
          type: string
        value:
          type: string
        defaultValue:
          type: string
        itemsLabels:
          type: array
          items:
            type: string
        items:
          type: array
          items:
            type: string
        confidential:
          type: boolean
        empty:
          type: boolean
        rawValue:
          type: string
    CIReference:
      type: object
      properties:
        id:
          type: string
        ciType:
          type: string
        displayLabel:
          type: string
    Row:
      type: object
      properties:
        ci:
          $ref: '#/components/schemas/CIReference'
        columnValues:
          type: array
          items:
            type: string
    SearchResult:
      type: object
      properties:
        columns:
          type: array
          items:
            type: string
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Row'
    SerializableCI:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/CIReference'
        properties:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
    CreateTokenRequest:
      type: object
      properties:
        userName:
          type: string
        password:
          type: string
    UserActionInvokeRequest:
      type: object
      properties:
        action:
          type: string
        cis:
          type: array
          items:
            $ref: '#/components/schemas/CIReference'
    UserActionInvokeResponse:
      type: object
    AvailableActionsRequest:
      type: object
      properties:
        cis:
          type: array
          items:
            $ref: '#/components/schemas/CIReference'
    AvailableActionsResponse:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/SerializableAction'
    SerializableAction:
      type: object
      properties:
        identifier:
          type: string
        label:
          type: string
    SerializableUser:
      type: object
      properties:
        name:
          type: string
        authenticated:
          type: boolean
        authorities:
          type: array
          items:
            type: string
    WhoAmIResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/SerializableUser'
    GetSearchTemplateResponse:
      type: object
      properties:
        template:
          $ref: '#/components/schemas/SearchRequest'
        requestTemplate:
          $ref: '#/components/schemas/SearchRequest'
    GetSchemaResponse:
      type: object
      properties:
        ciTypes:
          type: array
          items:
            $ref: '#/components/schemas/SerializableCITypeDescriptor'
    SerializableCIPropertyDescriptor:
      type: object
      properties:
        name:
          type: string
        label:
          type: string
        readable:
          type: boolean
        writable:
          type: boolean
        mandatory:
          type: boolean
        confidential:
          type: boolean
    SerializableCITypeDescriptor:
      type: object
      properties:
        label:
          type: string
        ciType:
          type: string
        category:
          type: string
        userRights:
          type: array
          items:
            type: string
        ciTypeHierarchy:
          type: array
          items:
            type: string
        properties:
          type: array
          items:
            $ref: '#/components/schemas/SerializableCIPropertyDescriptor'
    GetCITypeResponse:
      type: object
      properties:
        ciType:
          $ref: '#/components/schemas/SerializableCITypeDescriptor'
    WebSiteLink:
      type: object
      properties:
        id:
          type: integer
          format: int32
        label:
          type: string
        url:
          type: string

